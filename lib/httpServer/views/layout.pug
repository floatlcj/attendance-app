doctype html
html(lang="en").has-navbar-fixed-top
    head
        title Attendance App - #{pageTitle}
        meta(name="viewport", content="width=device-width, initial-scale=1")
        link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bulma@1.0.2/css/bulma.min.css")
        link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bulma-calendar@7.1.1/dist/css/bulma-calendar.min.css")        
        script(src="https://use.fontawesome.com/releases/v5.3.1/js/all.js", defer)
        script(src="https://cdn.jsdelivr.net/npm/bulma-calendar@7.1.1/dist/js/bulma-calendar.min.js")        
        style(type='text/css').
            /* Tooltip container */
            .tooltip {
                position: relative;                                
            }

            /* Tooltip text */
            .tooltip .tooltiptext {
                visibility: hidden;                
                background-color: black;
                color: #fff;
                text-align: center;
                padding: 5px;
                border-radius: 6px;
                top: -5px;
                left: 105%;   
                word-break: normal;
            
                /* Position the tooltip text - see examples below! */
                position: absolute;
                z-index: 1;
            }

            /* Show the tooltip text when you mouse over the tooltip container */
            .tooltip:hover .tooltiptext {
                visibility: visible;
            }
    body
        nav.navbar.is-fixed-top.is-primary
            .container
                .navbar-menu.is-active
                    .navbar-brand
                        a.navbar-item.title.is-2(href="/home") Attendance App
                    .navbar-start                        
                        a.navbar-item(href="/blockchain", class=`${pageTitle=='Blockchain' ? 'is-active' : ''}`) Blockchain
                        a.navbar-item(href="/blockchain/transactions", class=`${pageTitle=='Unconfirmed Transactions' ? 'is-active' : ''}`) Unconfirmed Transactions
                    .navbar-end
                        if user 
                            a.navbar-item.title.is-3 #{user}
                        //- a.navbar-item(href="/api-docs/", target="_blank") API
        block content
        script.
            function setLoadingState() {
                    var button = document.getElementById('queryButton');
                    button.classList.add('is-loading');
                }
            function toggle_visibility(id) {
                var e = document.getElementById(id);
                if ( e.style.display == 'none' )
                    e.style.display = null;
                else
                    e.style.display = 'none';
            }
            function hideNotification() {
                var notification = document.getElementById('notification');
                notification.style.display = 'none';
            }
            document.addEventListener('DOMContentLoaded', () => {
            // Functions to open and close a modal
            function openModal($el) {
                $el.classList.add('is-active');
            }

            function closeModal($el) {
                $el.classList.remove('is-active');
            }

            function closeAllModals() {
                (document.querySelectorAll('.modal') || []).forEach(($modal) => {
                closeModal($modal);
                });
            }

            // Add a click event on buttons to open a specific modal
            (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
                const modal = $trigger.dataset.target;
                const $target = document.getElementById(modal);

                $trigger.addEventListener('click', () => {
                openModal($target);
                });
            });

            // Add a click event on various child elements to close the parent modal
            (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
                const $target = $close.closest('.modal');

                $close.addEventListener('click', () => {
                closeModal($target);
                });
            });

            // Add a keyboard event to close all modals
            document.addEventListener('keydown', (event) => {
                if(event.key === "Escape") {
                closeAllModals();
                }
            });
            });
